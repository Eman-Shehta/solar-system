name: solar system workflows
on: 
   workflow_dispatch: 
   push: 
     branches:
       - 'main'
       - 'feature/*'
   pull_request: 
    branches: 
        - 'main'    
env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}    

jobs:
  unit-testing:
    name: unit-testing
    #strategy:
        #matrix: 
            #version: [18, 19, 20]
            #os: ubuntu-latest
            #exclude:
                #- version: 18
                  #os: macos-latest
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: setup nodejs version 18
        uses: actions/setup-node@v4
        with:
            #node-version: ${{ matrix.version }}
            node-version: 18
      - name: cache npm dependencies
        uses: actions/cache@v4

        with:
          path: node_modules
          key: ${{ runner.os }}--node_modules-${{ hashFiles('package.lock.json')}}  
      - name: install dependencies
        run: npm install
      - name: unit testing
        run: npm test  
      - name: archive test result
        uses: actions/upload-artifact@v4
        with: 
            name: mocha-test-result
            path: test-results.xml
  code-coverage:
    name: code-coverage
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: setup nodejs version 18
        uses: actions/setup-node@v4
        with:
            
            node-version: 18
      - name: cache npm dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}--node_modules-${{ hashFiles('package.lock.json')}}      
      - name: install dependencies
        run: npm install
      - name: check code coverage
        continue-on-error: true
        run: npm run coverage  
      - name: archive test result
        uses: actions/upload-artifact@v4
        with: 
            name: code-coverage-result
            path: coverage
  docker:
     name: contranization
     needs: [unit-testing, code-coverage]
     runs-on: ubuntu-latest
     steps:
        - name: checkout repo
          uses: actions/checkout@v4
        - name: Login to Docker Hub
          uses: docker/login-action@v3

          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}  
        - name:  GHCR Login 
          uses: docker/login-action@v3
  
          with:
            registry: ghcri.io
             username: ${{ github.repository_owner }}
             password: ${{ secrets.GITHUB_TOKEN }}  
        - name: docker build for testing
          uses: docker/build-push-action@v4
          with:
            context: .
            push: false
            tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

        - name: docker image testing
          run: |
           docker images
           docker run --name solar-system-app -d -p 3000:3000 -e MONGO_URI=$MONGO_URI -e MONGO_PASSWORD=$MONGO_PASSWORD -e MONGO_USERNAME=$MONGO_USERNAME ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{ github.sha }}
           export IP=$(docker inspect -f '{{range . NetworkSettings.Networks}} {{.IPAddress}}{{end}}' solar-system-app)
           echo $IP
           echo testing image url using wget
           wget -q -O  - 127.0.0.1:3000/live |grep live 
        
        - name: docker push
          uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

   